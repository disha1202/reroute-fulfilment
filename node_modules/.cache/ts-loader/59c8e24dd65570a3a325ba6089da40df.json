{"remainingRequest":"/home/disha/ionic-sdk/node_modules/babel-loader/lib/index.js!/home/disha/ionic-sdk/node_modules/ts-loader/index.js??ref--14-2!/home/disha/ionic-sdk/node_modules/eslint-loader/index.js??ref--13-0!/home/disha/ionic-sdk/src/store/modules/product/actions.ts","dependencies":[{"path":"/home/disha/ionic-sdk/src/store/modules/product/actions.ts","mtime":1635508117002},{"path":"/home/disha/ionic-sdk/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/disha/ionic-sdk/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/disha/ionic-sdk/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/disha/ionic-sdk/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2Rpc2hhL2lvbmljLXNkay9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IHsgUHJvZHVjdFNlcnZpY2UgfSBmcm9tICJAL3NlcnZpY2VzL1Byb2R1Y3RTZXJ2aWNlIjsKaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAnLi9tdXRhdGlvbi10eXBlcyc7CmltcG9ydCB7IGhhc0Vycm9yLCBzaG93VG9hc3QgfSBmcm9tICdAL3V0aWxzJzsKaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAnQC9pMThuJzsKaW1wb3J0IGVtaXR0ZXIgZnJvbSAnQC9ldmVudC1idXMnOwp2YXIgYWN0aW9ucyA9IHsKICAvLyBGaW5kIFByb2R1Y3QKICBmaW5kUHJvZHVjdDogZnVuY3Rpb24gZmluZFByb2R1Y3QoX3JlZiwgcGF5bG9hZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgc3RhdGUsIHJlc3AsIHByb2R1Y3RzLCB0b3RhbFByb2R1Y3RzQ291bnQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdCwgc3RhdGUgPSBfcmVmLnN0YXRlOwogICAgICAgICAgICAgIC8vIFNob3cgbG9hZGVyIG9ubHkgd2hlbiBuZXcgcXVlcnkgYW5kIG5vdCB0aGUgaW5maW5pdGUgc2Nyb2xsCiAgICAgICAgICAgICAgaWYgKHBheWxvYWQudmlld0luZGV4ID09PSAwKSBlbWl0dGVyLmVtaXQoInByZXNlbnRMb2FkZXIiKTsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gUHJvZHVjdFNlcnZpY2UuZmV0Y2hQcm9kdWN0cyh7CiAgICAgICAgICAgICAgICAvLyB1c2VkIHNrdSBhcyB3ZSBhcmUgY3VycmVudGx5IG9ubHkgdXNpbmcgc2t1IHRvIHNlYXJjaCBmb3IgdGhlIHByb2R1Y3QKICAgICAgICAgICAgICAgICJmaWx0ZXJzIjogWydza3U6ICcgKyBwYXlsb2FkLnF1ZXJ5U3RyaW5nXSwKICAgICAgICAgICAgICAgICJ2aWV3U2l6ZSI6IHBheWxvYWQudmlld1NpemUsCiAgICAgICAgICAgICAgICAidmlld0luZGV4IjogcGF5bG9hZC52aWV3SW5kZXgKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICByZXNwID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgLy8gcmVzcC5kYXRhLnJlc3BvbnNlLm51bUZvdW5kIHRlbGxzIHRoZSBudW1iZXIgb2YgaXRlbXMgaW4gdGhlIHJlc3BvbnNlCiAgICAgICAgICAgICAgaWYgKHJlc3Auc3RhdHVzID09PSAyMDAgJiYgcmVzcC5kYXRhLnJlc3BvbnNlLm51bUZvdW5kID4gMCAmJiAhaGFzRXJyb3IocmVzcCkpIHsKICAgICAgICAgICAgICAgIHByb2R1Y3RzID0gcmVzcC5kYXRhLnJlc3BvbnNlLmRvY3M7CiAgICAgICAgICAgICAgICB0b3RhbFByb2R1Y3RzQ291bnQgPSByZXNwLmRhdGEucmVzcG9uc2UubnVtRm91bmQ7CiAgICAgICAgICAgICAgICBpZiAocGF5bG9hZC52aWV3SW5kZXggJiYgcGF5bG9hZC52aWV3SW5kZXggPiAwKSBwcm9kdWN0cyA9IHN0YXRlLnByb2R1Y3RzLmxpc3QuY29uY2F0KHByb2R1Y3RzKTsKICAgICAgICAgICAgICAgIGNvbW1pdCh0eXBlcy5QUk9EVUNUX1NFQVJDSF9VUERBVEVELCB7CiAgICAgICAgICAgICAgICAgIHByb2R1Y3RzOiBwcm9kdWN0cywKICAgICAgICAgICAgICAgICAgdG90YWxQcm9kdWN0c0NvdW50OiB0b3RhbFByb2R1Y3RzQ291bnQKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAvL3Nob3dpbmcgZXJyb3Igd2hlbmV2ZXIgZ2V0dGluZyBubyBwcm9kdWN0cyBpbiB0aGUgcmVzcG9uc2Ugb3IgaGF2aW5nIGFueSBvdGhlciBlcnJvcgogICAgICAgICAgICAgICAgc2hvd1RvYXN0KHRyYW5zbGF0ZSgiUHJvZHVjdCBub3QgZm91bmQiKSk7CiAgICAgICAgICAgICAgfSAvLyBSZW1vdmUgYWRkZWQgbG9hZGVyIG9ubHkgd2hlbiBuZXcgcXVlcnkgYW5kIG5vdCB0aGUgaW5maW5pdGUgc2Nyb2xsCgoKICAgICAgICAgICAgICBpZiAocGF5bG9hZC52aWV3SW5kZXggPT09IDApIGVtaXR0ZXIuZW1pdCgiZGlzbWlzc0xvYWRlciIpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEwOwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDApOwogICAgICAgICAgICAgIHNob3dUb2FzdCh0cmFuc2xhdGUoIlNvbWV0aGluZyB3ZW50IHdyb25nIikpOwoKICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXNwKTsKCiAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMiwgMTBdXSk7CiAgICB9KSkoKTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IGFjdGlvbnM7"},{"version":3,"sources":["/home/disha/ionic-sdk/node_modules/eslint-loader/index.js??ref--13-0!/home/disha/ionic-sdk/src/store/modules/product/actions.ts"],"names":[],"mappings":";;;AAAA,SAAS,cAAT,QAA+B,2BAA/B;AAIA,OAAO,KAAK,KAAZ,MAAuB,kBAAvB;AACA,SAAS,QAAT,EAAmB,SAAnB,QAAoC,SAApC;AACA,SAAS,SAAT,QAA0B,QAA1B;AACA,OAAO,OAAP,MAAoB,aAApB;AAGA,IAAM,OAAO,GAAwC;AAEnD;AACM,EAAA,WAH6C,6BAGb,OAHa,EAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxB,cAAA,MAAwB,QAAxB,MAAwB,EAAhB,KAAgB,QAAhB,KAAgB;AAE3C;AACA,kBAAI,OAAO,CAAC,SAAR,KAAsB,CAA1B,EAA6B,OAAO,CAAC,IAAR,CAAa,eAAb;AAHc;AAAA;AAAA,qBAQ5B,cAAc,CAAC,aAAf,CAA6B;AACxC;AACA,2BAAW,CAAC,UAAU,OAAO,CAAC,WAAnB,CAF6B;AAGxC,4BAAY,OAAO,CAAC,QAHoB;AAIxC,6BAAa,OAAO,CAAC;AAJmB,eAA7B,CAR4B;;AAAA;AAQzC,cAAA,IARyC;;AAezC;AACA,kBAAI,IAAI,CAAC,MAAL,KAAgB,GAAhB,IAAuB,IAAI,CAAC,IAAL,CAAU,QAAV,CAAmB,QAAnB,GAA8B,CAArD,IAA0D,CAAC,QAAQ,CAAC,IAAD,CAAvE,EAA+E;AACzE,gBAAA,QADyE,GAC9D,IAAI,CAAC,IAAL,CAAU,QAAV,CAAmB,IAD2C;AAEvE,gBAAA,kBAFuE,GAElD,IAAI,CAAC,IAAL,CAAU,QAAV,CAAmB,QAF+B;AAI7E,oBAAI,OAAO,CAAC,SAAR,IAAqB,OAAO,CAAC,SAAR,GAAoB,CAA7C,EAAgD,QAAQ,GAAG,KAAK,CAAC,QAAN,CAAe,IAAf,CAAoB,MAApB,CAA2B,QAA3B,CAAX;AAChD,gBAAA,MAAM,CAAC,KAAK,CAAC,sBAAP,EAA+B;AAAE,kBAAA,QAAQ,EAAE,QAAZ;AAAsB,kBAAA,kBAAkB,EAAE;AAA1C,iBAA/B,CAAN;AACD,eAND,MAMO;AACL;AACA,gBAAA,SAAS,CAAC,SAAS,CAAC,mBAAD,CAAV,CAAT;AACD,eAzBwC,CA0BzC;;;AACA,kBAAI,OAAO,CAAC,SAAR,KAAsB,CAA1B,EAA6B,OAAO,CAAC,IAAR,CAAa,eAAb;AA3BY;AAAA;;AAAA;AAAA;AAAA;AA6BzC,cAAA,OAAO,CAAC,GAAR;AACA,cAAA,SAAS,CAAC,SAAS,CAAC,sBAAD,CAAV,CAAT;;AA9ByC;AAAA,+CAiCpC,IAjCoC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkC5C;AArCkD,CAArD;AAwCA,eAAe,OAAf","sourcesContent":["import { ProductService } from \"@/services/ProductService\";\nimport { ActionTree } from 'vuex'\nimport RootState from '@/store/RootState'\nimport ProductState from './ProductState'\nimport * as types from './mutation-types'\nimport { hasError, showToast } from '@/utils'\nimport { translate } from '@/i18n'\nimport emitter from '@/event-bus'\n\n\nconst actions: ActionTree<ProductState, RootState> = {\n\n  // Find Product\n  async findProduct ({ commit, state }, payload) {\n\n    // Show loader only when new query and not the infinite scroll\n    if (payload.viewIndex === 0) emitter.emit(\"presentLoader\");\n\n    let resp;\n\n    try {\n      resp = await ProductService.fetchProducts({\n        // used sku as we are currently only using sku to search for the product\n        \"filters\": ['sku: ' + payload.queryString],\n        \"viewSize\": payload.viewSize,\n        \"viewIndex\": payload.viewIndex\n      })\n\n      // resp.data.response.numFound tells the number of items in the response\n      if (resp.status === 200 && resp.data.response.numFound > 0 && !hasError(resp)) {\n        let products = resp.data.response.docs;\n        const totalProductsCount = resp.data.response.numFound;\n\n        if (payload.viewIndex && payload.viewIndex > 0) products = state.products.list.concat(products)\n        commit(types.PRODUCT_SEARCH_UPDATED, { products: products, totalProductsCount: totalProductsCount })\n      } else {\n        //showing error whenever getting no products in the response or having any other error\n        showToast(translate(\"Product not found\"));\n      }\n      // Remove added loader only when new query and not the infinite scroll\n      if (payload.viewIndex === 0) emitter.emit(\"dismissLoader\");\n    } catch(error){\n      console.log(error)\n      showToast(translate(\"Something went wrong\"));\n    }\n    // TODO Handle specific error\n    return resp;\n  },\n}\n\nexport default actions;"],"sourceRoot":""}]}