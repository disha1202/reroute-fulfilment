{"remainingRequest":"/home/disha/ionic-sdk/node_modules/babel-loader/lib/index.js!/home/disha/ionic-sdk/node_modules/ts-loader/index.js??ref--14-2!/home/disha/ionic-sdk/node_modules/eslint-loader/index.js??ref--13-0!/home/disha/ionic-sdk/src/api/index.ts","dependencies":[{"path":"/home/disha/ionic-sdk/src/api/index.ts","mtime":1635508116998},{"path":"/home/disha/ionic-sdk/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/disha/ionic-sdk/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/disha/ionic-sdk/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/disha/ionic-sdk/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvZGlzaGEvaW9uaWMtc2RrL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2Rpc2hhL2lvbmljLXNkay9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IHNldHVwQ2FjaGUgfSBmcm9tICdheGlvcy1jYWNoZS1hZGFwdGVyJzsKaW1wb3J0IE9mZmxpbmVIZWxwZXIgZnJvbSAnQC9vZmZsaW5lLWhlbHBlcic7CmltcG9ydCBlbWl0dGVyIGZyb20gIkAvZXZlbnQtYnVzIjsKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUnOwppbXBvcnQgeyBTdGF0dXNDb2RlcyB9IGZyb20gJ2h0dHAtc3RhdHVzLWNvZGVzJzsKaW1wb3J0IHJvdXRlciBmcm9tICdAL3JvdXRlcic7CmF4aW9zLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgdmFyIHRva2VuID0gc3RvcmUuZ2V0dGVyc1sndXNlci9nZXRVc2VyVG9rZW4nXTsKCiAgaWYgKHRva2VuKSB7CiAgICBjb25maWcuaGVhZGVycy5BdXRob3JpemF0aW9uID0gJ0JlYXJlciAnICsgdG9rZW47CiAgICBjb25maWcuaGVhZGVyc1snQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24vanNvbic7CiAgfQoKICByZXR1cm4gY29uZmlnOwp9KTsKYXhpb3MuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAvLyBBbnkgc3RhdHVzIGNvZGUgdGhhdCBsaWUgd2l0aGluIHRoZSByYW5nZSBvZiAyeHggY2F1c2UgdGhpcyBmdW5jdGlvbiB0byB0cmlnZ2VyCiAgLy8gRG8gc29tZXRoaW5nIHdpdGggcmVzcG9uc2UgZGF0YQogIHJldHVybiByZXNwb25zZTsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgLy8gVE9ETyBIYW5kbGUgaXQgaW4gYSBiZXR0ZXIgd2F5CiAgLy8gQ3VycmVudGx5IHdoZW4gdGhlIGFwcCBnZXRzIG9mZmxpbmUsIHRoZSB0aW1lIGJldHdlZW4gYWRkaW5nIGEgbG9hZGVyIGFuZCByZW1vdmluZyBpdCBpcyBmcmFjdGlvbmFsIGR1ZSB0byB3aGljaCBsb2FkZXIgZGlzbWlzcyBpcyBjYWxsZWQgYmVmb3JlIGxvYWRlciBwcmVzZW50CiAgLy8gd2hpY2ggY2F1c2UgbG9hZGVyIHRvIHJ1biBpbmRlZmluaXRlbHkKICAvLyBGb2xsb3dpbmcgZ2l2ZXMgZGlzbWlzcyBsb2FkZXIgYSBkZWxheSBvZiAxMDAgbWljcm9zZWNvbmRzIHRvIGdldCBib3RoIHRoZSBhY3Rpb25zIGluIHN5bmMKICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBlbWl0dGVyLmVtaXQoImRpc21pc3NMb2FkZXIiKTsKICB9LCAxMDApOwoKICBpZiAoZXJyb3IucmVzcG9uc2UpIHsKICAgIC8vIFRPRE8gSGFuZGxlIGNhc2UgZm9yIGZhaWxlZCBxdWV1ZSByZXF1ZXN0CiAgICB2YXIgc3RhdHVzID0gZXJyb3IucmVzcG9uc2Uuc3RhdHVzOwoKICAgIGlmIChzdGF0dXMgPT09IFN0YXR1c0NvZGVzLlVOQVVUSE9SSVpFRCkgewogICAgICBzdG9yZS5kaXNwYXRjaCgidXNlci9sb2dvdXQiKTsKICAgICAgcm91dGVyLnB1c2goJy9sb2dpbicpOwogICAgfQogIH0gLy8gQW55IHN0YXR1cyBjb2RlcyB0aGF0IGZhbGxzIG91dHNpZGUgdGhlIHJhbmdlIG9mIDJ4eCBjYXVzZSB0aGlzIGZ1bmN0aW9uIHRvIHRyaWdnZXIKICAvLyBEbyBzb21ldGhpbmcgd2l0aCByZXNwb25zZSBlcnJvcgoKCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CnZhciBtYXhBZ2UgPSBwcm9jZXNzLmVudi5WVUVfQVBQX0NBQ0hFX01BWF9BR0UgPyBwYXJzZUludChwcm9jZXNzLmVudi5WVUVfQVBQX0NBQ0hFX01BWF9BR0UpIDogMDsKdmFyIGF4aW9zQ2FjaGUgPSBzZXR1cENhY2hlKHsKICBtYXhBZ2U6IG1heEFnZSAqIDEwMDAKfSk7Ci8qKgogKiBHZW5lcmljIG1ldGhvZCB0byBjYWxsIEFQSXMKICoKICogQHBhcmFtIHtzdHJpbmd9ICB1cmwgLSBBUEkgVXJsCiAqIEBwYXJhbSB7c3RyaW5nPX0gbWV0aG9kIC0gJ0dFVCcsICdQVVQnLCAnUE9TVCcsICdERUxFVEUgLCBhbmQgJ1BBVENIJwogKiBAcGFyYW0ge2FueX0gW2RhdGFdIC0gT3B0aW9uYWw6IGBkYXRhYCBpcyB0aGUgZGF0YSB0byBiZSBzZW50IGFzIHRoZSByZXF1ZXN0IGJvZHkuIE9ubHkgYXBwbGljYWJsZSBmb3IgcmVxdWVzdCBtZXRob2RzICdQVVQnLCAnUE9TVCcsICdERUxFVEUgLCBhbmQgJ1BBVENIJwogKiBXaGVuIG5vIGB0cmFuc2Zvcm1SZXF1ZXN0YCBpcyBzZXQsIG11c3QgYmUgb2Ygb25lIG9mIHRoZSBmb2xsb3dpbmcgdHlwZXM6CiAqIC0gc3RyaW5nLCBwbGFpbiBvYmplY3QsIEFycmF5QnVmZmVyLCBBcnJheUJ1ZmZlclZpZXcsIFVSTFNlYXJjaFBhcmFtcwogKiAtIEJyb3dzZXIgb25seTogRm9ybURhdGEsIEZpbGUsIEJsb2IKICogLSBOb2RlIG9ubHk6IFN0cmVhbSwgQnVmZmVyCiAqIEBwYXJhbSB7YW55fSBbcGFyYW1zXSAtIE9wdGlvbmFsOiBgcGFyYW1zYCBhcmUgdGhlIFVSTCBwYXJhbWV0ZXJzIHRvIGJlIHNlbnQgd2l0aCB0aGUgcmVxdWVzdC4gTXVzdCBiZSBhIHBsYWluIG9iamVjdCBvciBhIFVSTFNlYXJjaFBhcmFtcyBvYmplY3QKICogQHBhcmFtIHtib29sZWFufSBbY2FjaGVdIC0gT3B0aW9uYWw6IEFwcGx5IGNhY2hpbmcgdG8gaXQKICogIEBwYXJhbSB7Ym9vbGVhbn0gW3F1ZXVlXSAtIE9wdGlvbmFsOiBBcHBseSBvZmZsaW5lIHF1ZXVlaW5nIHRvIGl0CiAqIEByZXR1cm4ge1Byb21pc2V9IFJlc3BvbnNlIGZyb20gQVBJIGFzIHJldHVybmVkIGJ5IEF4aW9zCiAqLwoKdmFyIGFwaSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoY3VzdG9tQ29uZmlnKSB7CiAgICB2YXIgY29uZmlnLCBiYXNlVVJMLCBuZXR3b3JrU3RhdHVzOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAvLyBQcmVwYXJlIGNvbmZpZ3VyYXRpb24KICAgICAgICAgICAgY29uZmlnID0gewogICAgICAgICAgICAgIHVybDogY3VzdG9tQ29uZmlnLnVybCwKICAgICAgICAgICAgICBtZXRob2Q6IGN1c3RvbUNvbmZpZy5tZXRob2QsCiAgICAgICAgICAgICAgZGF0YTogY3VzdG9tQ29uZmlnLmRhdGEsCiAgICAgICAgICAgICAgcGFyYW1zOiBjdXN0b21Db25maWcucGFyYW1zCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIGJhc2VVUkwgPSBwcm9jZXNzLmVudi5WVUVfQVBQX0JBU0VfVVJMOwogICAgICAgICAgICBpZiAoYmFzZVVSTCkgY29uZmlnLmJhc2VVUkwgPSBiYXNlVVJMOwogICAgICAgICAgICBpZiAoY3VzdG9tQ29uZmlnLmNhY2hlKSBjb25maWcuYWRhcHRlciA9IGF4aW9zQ2FjaGUuYWRhcHRlcjsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgIHJldHVybiBPZmZsaW5lSGVscGVyLmdldE5ldHdvcmtTdGF0dXMoKTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIG5ldHdvcmtTdGF0dXMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgaWYgKCEoY3VzdG9tQ29uZmlnLnF1ZXVlICYmICFuZXR3b3JrU3RhdHVzLmNvbm5lY3RlZCkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICghY29uZmlnLmhlYWRlcnMpIGNvbmZpZy5oZWFkZXJzID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBheGlvcy5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vbiksIGNvbmZpZy5oZWFkZXJzKTsKICAgICAgICAgICAgZW1pdHRlci5lbWl0KCJxdWV1ZVRhc2siLCB7CiAgICAgICAgICAgICAgY2FsbGJhY2tFdmVudDogY3VzdG9tQ29uZmlnLmNhbGxiYWNrRXZlbnQsCiAgICAgICAgICAgICAgcGF5bG9hZDogY29uZmlnCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGF4aW9zKGNvbmZpZykpOwoKICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gYXBpKF94KSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKLyoqCiAqIENsaWVudCBtZXRob2QgdG8gZGlyZWN0bHkgcGFzcyBjb25maWd1cmF0aW9uIHRvIGF4aW9zCiAqCiAqIEBwYXJhbSB7YW55fSAgY29uZmlnIC0gQVBJIGNvbmZpZ3VyYXRpb24KICogQHJldHVybiB7UHJvbWlzZX0gUmVzcG9uc2UgZnJvbSBBUEkgYXMgcmV0dXJuZWQgYnkgQXhpb3MKICovCgoKdmFyIGNsaWVudCA9IGZ1bmN0aW9uIGNsaWVudChjb25maWcpIHsKICByZXR1cm4gYXhpb3MucmVxdWVzdChjb25maWcpOwp9OwoKZXhwb3J0IHsgYXBpIGFzIGRlZmF1bHQsIGNsaWVudCwgYXhpb3MgfTs="},{"version":3,"sources":["/home/disha/ionic-sdk/node_modules/eslint-loader/index.js??ref--13-0!/home/disha/ionic-sdk/src/api/index.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setupCache } from 'axios-cache-adapter'\nimport OfflineHelper from '@/offline-helper'\nimport emitter from \"@/event-bus\"\nimport store from '@/store';\nimport {\n    StatusCodes\n} from 'http-status-codes';\nimport router from '@/router'\n\naxios.interceptors.request.use((config: any) => {\n    const token = store.getters['user/getUserToken'];\n    if (token) {\n        config.headers.Authorization =  'Bearer ' + token;\n        config.headers['Content-Type'] = 'application/json';\n    }\n    return config;\n});\n\naxios.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  }, function (error) {\n    // TODO Handle it in a better way\n    // Currently when the app gets offline, the time between adding a loader and removing it is fractional due to which loader dismiss is called before loader present\n    // which cause loader to run indefinitely\n    // Following gives dismiss loader a delay of 100 microseconds to get both the actions in sync\n    setTimeout(() => emitter.emit(\"dismissLoader\"), 100);\n    if (error.response) {\n        // TODO Handle case for failed queue request\n        const { status } = error.response;\n        if (status === StatusCodes.UNAUTHORIZED) {\n          store.dispatch(\"user/logout\");\n          router.push('/login')\n        }\n    }\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  });\n\nconst maxAge = process.env.VUE_APP_CACHE_MAX_AGE ? parseInt(process.env.VUE_APP_CACHE_MAX_AGE) : 0;\nconst axiosCache = setupCache({\n    maxAge: maxAge * 1000\n})\n\n\n/**\n * Generic method to call APIs\n *\n * @param {string}  url - API Url\n * @param {string=} method - 'GET', 'PUT', 'POST', 'DELETE , and 'PATCH'\n * @param {any} [data] - Optional: `data` is the data to be sent as the request body. Only applicable for request methods 'PUT', 'POST', 'DELETE , and 'PATCH'\n * When no `transformRequest` is set, must be of one of the following types:\n * - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n * - Browser only: FormData, File, Blob\n * - Node only: Stream, Buffer\n * @param {any} [params] - Optional: `params` are the URL parameters to be sent with the request. Must be a plain object or a URLSearchParams object\n * @param {boolean} [cache] - Optional: Apply caching to it\n *  @param {boolean} [queue] - Optional: Apply offline queueing to it\n * @return {Promise} Response from API as returned by Axios\n */\nconst api = async (customConfig: any) => {\n    // Prepare configuration\n    const config: any = {\n        url: customConfig.url,\n        method: customConfig.method,\n        data: customConfig.data,\n        params: customConfig.params\n    }\n    const baseURL = process.env.VUE_APP_BASE_URL;\n    if (baseURL) config.baseURL = baseURL;\n\n    if(customConfig.cache) config.adapter = axiosCache.adapter;\n\n    const networkStatus =  await OfflineHelper.getNetworkStatus();\n    if (customConfig.queue && !networkStatus.connected) {\n        if (!config.headers) config.headers = { ...axios.defaults.headers.common, ...config.headers };\n\n        emitter.emit(\"queueTask\", {\n            callbackEvent: customConfig.callbackEvent,\n            payload: config\n        });\n    } else {\n        return axios(config);\n    }\n}\n\n/**\n * Client method to directly pass configuration to axios\n *\n * @param {any}  config - API configuration\n * @return {Promise} Response from API as returned by Axios\n */\nconst client = (config: any) => {\n    return axios.request(config);\n}\n\nexport { api as default, client, axios };"],"sourceRoot":""}]}